/*@bgen(jjtree) Generated By:JJTree: Do not edit this line. test1.jj */
/*@egen*//** \u30aa\u30d7\u30b7\u30e7\u30f3 */
options {
    /* parser\u3092for\u6587\u306a\u3069\u3067\u7e70\u308a\u8fd4\u3057\u4f7f\u3046\u306a\u3089false\u306b\u3059\u308b */
    STATIC = false;
}

/** Parser\u30af\u30e9\u30b9\u306e\u5b9a\u7fa9 */
PARSER_BEGIN(MyParser)
package parser;
public class MyParser/*@bgen(jjtree)*/implements MyParserTreeConstants/*@egen*/ {/*@bgen(jjtree)*/
  protected JJTMyParserState jjtree = new JJTMyParserState();

/*@egen*/
    /* \u3053\u3053\u306b\uff0c\u666e\u901a\u306eJava\u30af\u30e9\u30b9\u306e\u3088\u3046\u306b\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3067\u304d\u308b\u3063\u307d\u3044 */
}
PARSER_END(MyParser)
/** \u3053\u3053\u307e\u3067\u304cParser\u30af\u30e9\u30b9\u306e\u5b9a\u7fa9 */
/** \u4ee5\u4e0b\u306f\u6587\u6cd5\u306e\u5b9a\u7fa9 */

/** \u7121\u8996\u3059\u308b\u6587\u5b57\u3092\u5b9a\u7fa9 */
SKIP:
{
    " " | "\r" | "\t" | "\n"
}

/** \u51fa\u73fe\u3059\u308b\u30c8\u30fc\u30af\u30f3\u3092\u5b9a\u7fa9 */
TOKEN:
{
        <INTEGER: (["0"-"9"])>
}

/** Parser\u306e\u5b9f\u884c
 *  \u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092Main.java\u304b\u3089\u547c\u3073\u51fa\u3059
 */
void doParse():
{/*@bgen(jjtree) doParse */
    SimpleNode jjtn000 = new SimpleNode(JJTDOPARSE);
    boolean jjtc000 = true;
    jjtree.openNodeScope(jjtn000);
/*@egen*/
    /* \u3053\u3053\u3067\u4f7f\u3046\u5909\u6570\u3092\u5ba3\u8a00 */
    Token integer;
}
{/*@bgen(jjtree) doParse */
    try {
/*@egen*/
    /* \u5165\u529b\u3055\u308c\u305f\u6587\u5b57\u3092\u8868\u793a */
    integer = <INTEGER>/*@bgen(jjtree)*/
                        {
                          jjtree.closeNodeScope(jjtn000, true);
                          jjtc000 = false;
                        }
/*@egen*/ {
        System.out.println("inputted: "+integer.image);
    }/*@bgen(jjtree)*/
    } finally {
      if (jjtc000) {
        jjtree.closeNodeScope(jjtn000, true);
      }
    }
/*@egen*/
}